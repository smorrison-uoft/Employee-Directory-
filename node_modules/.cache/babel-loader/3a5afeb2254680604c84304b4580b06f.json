{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stephaniemorrison/Desktop/coding-projects/Employee-Directory-/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport '../';\nimport Header from './components/Header';\nimport Table from './components/Table';\nimport SearchBar from './components/SearchBar';\nimport API from './utils/API';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      employees: [],\n      filteredEmployees: [],\n      sortOrder: \"descending\",\n      error: null,\n      searchInput: ''\n    };\n\n    this.onChange = e => {\n      this.searchFunction(e.target.value);\n      this.setState({\n        searchInput: e.target.value\n      });\n    };\n\n    this.onClick = (e, sortKey) => {\n      this.sortFunction(e, sortKey);\n    };\n\n    this.sortFunction = sortKey => {\n      console.log(\"passed sortKey is\", sortKey);\n      let result;\n\n      if (this.state.sortOrder === \"descending\") {\n        switch (sortKey) {\n          case 'name':\n            result = this.state.employees.sort(function (a, b) {\n              return ('' + a.name.first).localeCompare(b.name.first);\n            });\n            break;\n\n          case 'phone':\n            result = this.state.employees.sort(function (a, b) {\n              return ('' + a.phone).localeCompare(b.phone);\n            });\n            break;\n\n          case 'email':\n            result = this.state.employees.sort(function (a, b) {\n              return ('' + a.email).localeCompare(b.email);\n            });\n            break;\n\n          case 'dob':\n            result = this.state.employees.sort(function (a, b) {\n              return ('' + a.dob.date).localeCompare(b.dob.date);\n            });\n            break;\n\n          default:\n            return;\n        }\n\n        this.setState({\n          filteredEmployees: result,\n          sortOrder: \"ascending\"\n        });\n      } else if (this.state.sortOrder === \"ascending\") {\n        switch (sortKey) {\n          case 'name':\n            result = this.state.employees.sort(function (a, b) {\n              return ('' + b.name.first).localeCompare(a.name.first);\n            });\n            break;\n\n          case 'phone':\n            result = this.state.employees.sort(function (a, b) {\n              return ('' + b.phone).localeCompare(a.phone);\n            });\n            break;\n\n          case 'email':\n            result = this.state.employees.sort(function (a, b) {\n              return ('' + b.email).localeCompare(a.email);\n            });\n            break;\n\n          case 'dob':\n            result = this.state.employees.sort(function (a, b) {\n              return ('' + b.dob.date).localeCompare(a.dob.date);\n            });\n            break;\n\n          default:\n            return;\n        }\n\n        this.setState({\n          filteredEmployees: result,\n          sortOrder: \"descending\"\n        });\n      }\n    };\n\n    this.searchFunction = searchInput => {\n      const searchKeyword = searchInput.trim().toLowerCase();\n\n      if (searchKeyword) {\n        const filtered = this.state.employees.filter(employee => {\n          return employee.name.first.toLowerCase().includes(searchKeyword) || employee.name.last.toLowerCase().includes(searchKeyword);\n        });\n        this.setState({\n          filteredEmployees: filtered\n        });\n      } else {\n        this.setState({\n          filteredEmployees: this.state.employees\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    API.usersList().then(response => {\n      this.setState({\n        employees: response.data.results,\n        filteredEmployees: response.data.results,\n        sortedEmployees: response.data.results\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        backgroundImage: \"linear-gradient(120deg, #f6d365 0%, #fda085 100%);\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        searchInput: this.state.searchInput,\n        onSubmit: this.onSubmit,\n        onChange: this.onChange,\n        searchFunction: this.searchFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        employees: this.state.filteredEmployees,\n        onClick: this.onClick,\n        pointerSymbol: this.state.pointerSymbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/stephaniemorrison/Desktop/coding-projects/Employee-Directory-/my-app/src/App.js"],"names":["React","Component","Header","Table","SearchBar","API","App","state","isLoading","employees","filteredEmployees","sortOrder","error","searchInput","onChange","e","searchFunction","target","value","setState","onClick","sortKey","sortFunction","console","log","result","sort","a","b","name","first","localeCompare","phone","email","dob","date","searchKeyword","trim","toLowerCase","filtered","filter","employee","includes","last","componentDidMount","usersList","then","response","data","results","sortedEmployees","render","backgroundImage","onSubmit","pointerSymbol"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../';\nimport Header from './components/Header';\nimport Table from './components/Table';\nimport SearchBar from './components/SearchBar'\nimport API from './utils/API';\n\nclass App extends Component {\n  state = {\n    isLoading: true,\n    employees: [],\n    filteredEmployees: [],\n    sortOrder: \"descending\",\n    error: null,\n    searchInput: '',\n  };\n\n  componentDidMount() {\n    API.usersList()\n      .then(response => {\n        this.setState({\n          employees: response.data.results,\n          filteredEmployees: response.data.results,\n          sortedEmployees: response.data.results,\n        })\n      })\n  };\n\n  onChange = (e) => {\n    this.searchFunction(e.target.value);\n    this.setState({ searchInput: e.target.value })\n  }\n\n  onClick = (e, sortKey) => {\n    this.sortFunction(e, sortKey);\n  }\n\n  sortFunction = (sortKey) => {\n    console.log(\"passed sortKey is\", sortKey);\n    let result;\n    if (this.state.sortOrder === \"descending\") {\n      switch (sortKey) {\n        case 'name':\n          result = this.state.employees.sort(function (a, b) { return ('' + a.name.first).localeCompare(b.name.first); });\n          break;\n        case 'phone':\n          result = this.state.employees.sort(function (a, b) { return ('' + a.phone).localeCompare(b.phone); });\n          break;\n        case 'email':\n          result = this.state.employees.sort(function (a, b) { return ('' + a.email).localeCompare(b.email); });\n          break;\n        case 'dob':\n          result = this.state.employees.sort(function (a, b) { return ('' + a.dob.date).localeCompare(b.dob.date); });\n          break;\n        default:\n          return;\n      }\n      this.setState({\n        filteredEmployees: result,\n        sortOrder: \"ascending\"\n      })\n    }\n    else if (this.state.sortOrder === \"ascending\") {\n      switch (sortKey) {\n        case 'name':\n          result = this.state.employees.sort(function (a,b) { return ('' + b.name.first).localeCompare(a.name.first); });\n          break;\n        case 'phone':\n          result = this.state.employees.sort(function (a, b) { return ('' + b.phone).localeCompare(a.phone); });\n          break;\n        case 'email':\n          result = this.state.employees.sort(function (a, b) { return ('' + b.email).localeCompare(a.email); });\n          break;\n        case 'dob':\n          result = this.state.employees.sort(function (a, b) { return ('' + b.dob.date).localeCompare(a.dob.date); });\n          break;\n        default:\n          return;\n      }\n      this.setState({\n        filteredEmployees: result,\n        sortOrder: \"descending\"\n      })\n    }\n\n\n  }\n\n  searchFunction = (searchInput) => {\n    const searchKeyword = searchInput.trim().toLowerCase();\n    if (searchKeyword) {\n      const filtered = this.state.employees.filter(employee => {\n        return (((employee.name.first.toLowerCase()).includes(searchKeyword)) ||\n          ((employee.name.last.toLowerCase()).includes(searchKeyword)));\n      })\n      this.setState({\n        filteredEmployees: filtered\n      })\n    }\n    else {\n      this.setState({\n        filteredEmployees: this.state.employees\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{backgroundImage: \"linear-gradient(120deg, #f6d365 0%, #fda085 100%);\"}}>\n        <Header />\n        <SearchBar\n          searchInput={this.state.searchInput}\n          onSubmit={this.onSubmit}\n          onChange={this.onChange}\n          searchFunction={this.searchFunction} />\n        <Table\n          employees={this.state.filteredEmployees}\n          onClick={this.onClick}\n          pointerSymbol={this.state.pointerSymbol}\n        />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}