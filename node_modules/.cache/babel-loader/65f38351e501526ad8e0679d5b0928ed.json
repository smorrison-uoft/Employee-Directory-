{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stephaniemorrison/Desktop/coding-projects/Employee-Directory-/my-app/src/components/EmployeeBody.js\";\nimport React from \"react\"; //import '../css/styles.css';\n\nfunction EmployeeBody({\n  users\n}) {\n  formatDate = date => {\n    const dateString = date.dob.toString();\n    const yearEnd = dateString.indexOf('-');\n    const year = dateString.substring(0, yearEnd);\n    const monthEnd = dateString.indexOf('-', yearEnd + 1);\n    let month = dateString.substring(yearEnd + 1, monthEnd);\n    month = month.substr(0, 1) === '0' ? month.substr(1) : month;\n    let day = dateString.substr(monthEnd + 1, 2);\n    day = day.substr(0, 1) === '0' ? day.substr(1) : day;\n    return `${month}-${day}-${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: users[0] !== undefined && users[0].name !== undefined ? users.map(({\n      login,\n      name,\n      picture,\n      phone,\n      email,\n      dob\n    }) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"align-middle\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            // come back and make sure picture variable is correct\n            src: picture.medium,\n            alt: \"picture of \" + name.first + \", \" + name.last,\n            className: \"img-responsive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"name-cell align-middle\",\n          children: [name.title, \". \", name.first, \" \", name.last]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"align-middle\",\n          children: phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"align-middle\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"mailto:\" + email,\n            target: \"_blank\",\n            children: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          classNAME: \"algin-middle\",\n          children: formatDate(dob.Date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, login.uuid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EmployeeBody;\nexport default EmployeeBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeBody\");","map":{"version":3,"sources":["/Users/stephaniemorrison/Desktop/coding-projects/Employee-Directory-/my-app/src/components/EmployeeBody.js"],"names":["React","EmployeeBody","users","formatDate","date","dateString","dob","toString","yearEnd","indexOf","year","substring","monthEnd","month","substr","day","undefined","name","map","login","picture","phone","email","medium","first","last","title","Date","uuid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAiC;AAE7BC,EAAAA,UAAU,GAAGC,IAAI,IAAI;AACjB,UAAMC,UAAU,GAAGD,IAAI,CAACE,GAAL,CAASC,QAAT,EAAnB;AACA,UAAMC,OAAO,GAAGH,UAAU,CAACI,OAAX,CAAmB,GAAnB,CAAhB;AACA,UAAMC,IAAI,GAAGL,UAAU,CAACM,SAAX,CAAqB,CAArB,EAAwBH,OAAxB,CAAb;AACA,UAAMI,QAAQ,GAAGP,UAAU,CAACI,OAAX,CAAmB,GAAnB,EAAwBD,OAAO,GAAG,CAAlC,CAAjB;AACA,QAAIK,KAAK,GAAGR,UAAU,CAACM,SAAX,CAAqBH,OAAO,GAAG,CAA/B,EAAkCI,QAAlC,CAAZ;AACAC,IAAAA,KAAK,GAAIA,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgB,CAAhB,MAAuB,GAAxB,GAA+BD,KAAK,CAACC,MAAN,CAAa,CAAb,CAA/B,GAAiDD,KAAzD;AACA,QAAIE,GAAG,GAAGV,UAAU,CAACS,MAAX,CAAkBF,QAAQ,GAAG,CAA7B,EAAgC,CAAhC,CAAV;AACAG,IAAAA,GAAG,GAAIA,GAAG,CAACD,MAAJ,CAAW,CAAX,EAAc,CAAd,MAAqB,GAAtB,GAA6BC,GAAG,CAACD,MAAJ,CAAW,CAAX,CAA7B,GAA6CC,GAAnD;AAEA,WAAQ,GAAEF,KAAM,IAAGE,GAAI,IAAGL,IAAK,EAA/B;AAEH,GAZD;;AAcA,sBACI;AAAA,cACKR,KAAK,CAAC,CAAD,CAAL,KAAac,SAAb,IAA0Bd,KAAK,CAAC,CAAD,CAAL,CAASe,IAAT,KAAkBD,SAA5C,GAAyDd,KAAK,CAACgB,GAAN,CAAU,CAAC;AAAEC,MAAAA,KAAF;AAASF,MAAAA,IAAT;AAAeG,MAAAA,OAAf;AAAwBC,MAAAA,KAAxB;AAA+BC,MAAAA,KAA/B;AAAsChB,MAAAA;AAAtC,KAAD,KAAiD;AACjH,0BACI;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,iCACI;AACI;AACA,YAAA,GAAG,EAAEc,OAAO,CAACG,MAFjB;AAGI,YAAA,GAAG,EAAE,gBAAgBN,IAAI,CAACO,KAArB,GAA6B,IAA7B,GAAoCP,IAAI,CAACQ,IAHlD;AAII,YAAA,SAAS,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAA,qBACKR,IAAI,CAACS,KADV,QACmBT,IAAI,CAACO,KADxB,OACgCP,IAAI,CAACQ,IADrC;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAYI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,oBACKJ;AADL;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAeI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,iCACI;AAAG,YAAA,IAAI,EAAE,YAAYC,KAArB;AAA4B,YAAA,MAAM,EAAC,QAAnC;AAAA,sBACKA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAoBI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,oBACKnB,UAAU,CAACG,GAAG,CAACqB,IAAL;AADf;AAAA;AAAA;AAAA;AAAA,gBApBJ;AAAA,SAASR,KAAK,CAACS,IAAf;AAAA;AAAA;AAAA;AAAA,cADJ;AA4BH,KA7ByD,CAAzD,gBA8BO;AA/BZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH;;KApDQ3B,Y;AAwDT,eAAeA,YAAf","sourcesContent":["import React from \"react\";\n//import '../css/styles.css';\n\nfunction EmployeeBody({ users }) {\n\n    formatDate = date => {\n        const dateString = date.dob.toString();\n        const yearEnd = dateString.indexOf('-');\n        const year = dateString.substring(0, yearEnd);\n        const monthEnd = dateString.indexOf('-', yearEnd + 1);\n        let month = dateString.substring(yearEnd + 1, monthEnd);\n        month = (month.substr(0, 1) === '0') ? month.substr(1) : month;\n        let day = dateString.substr(monthEnd + 1, 2);\n        day = (day.substr(0, 1) === '0') ? day.substr(1) : day;\n\n        return `${month}-${day}-${year}`;\n\n    }\n\n    return (\n        <tbody>\n            {users[0] !== undefined && users[0].name !== undefined ? (users.map(({ login, name, picture, phone, email, dob }) => {\n                return (\n                    <tr key={login.uuid}>\n                        <td className=\"align-middle\">\n                            <img\n                                // come back and make sure picture variable is correct\n                                src={picture.medium}\n                                alt={\"picture of \" + name.first + \", \" + name.last}\n                                className=\"img-responsive\"\n                            />\n                        </td>\n                        <td className=\"name-cell align-middle\">\n                            {name.title}. {name.first} {name.last}\n                        </td>\n                        <td className=\"align-middle\">\n                            {phone}\n                        </td>\n                        <td className=\"align-middle\">\n                            <a href={\"mailto:\" + email} target=\"_blank\">\n                                {email}\n                            </a>\n                        </td>\n                        <td classNAME=\"algin-middle\">\n                            {formatDate(dob.Date)}\n\n                        </td>\n\n                    </tr>\n                );\n            })) : (\n                    <></>\n                )}\n        </tbody>\n    )\n}\n\n\n\nexport default EmployeeBody;"]},"metadata":{},"sourceType":"module"}